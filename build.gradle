plugins {
    id 'com.palantir.git-version' version '0.12.3'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'idea'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.sonarqube' version '3.3'
    id 'com.diffplug.spotless' version '6.0.0'
    id 'jacoco'
}

group = 'engineering.everest.starterkit'

def gitTagVersion = versionDetails()
version = gitTagVersion.commitDistance == 0
        ? gitTagVersion.lastTag
        : "${gitTagVersion.lastTag}+${gitTagVersion.commitDistance}-SNAPSHOT"

ext {
    awsSdkVersion = '1.12.131'
    commonsLangVersion = '3.11'
    guavaVersion = '31.0.1-jre'
    lombokVersion = '1.18.22'
    springBootVersion = '2.6.2'

    junitVersion = '5.8.2'
    mockitoVersion = '4.2.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

dependencies {
    api "com.amazonaws:aws-java-sdk-s3:${awsSdkVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "com.google.guava:guava:${guavaVersion}"
    compileOnly 'org.springframework.boot:spring-boot-starter-data-mongodb'

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    java {
        withJavadocJar()
        withSourcesJar()
    }
}

spotless {
    format 'misc', {
        target '*.gradle', '*.md', '.gitignore'
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
    java {
        eclipse().configFile("$rootDir/eclipse-formatter-config.xml")
        indentWithSpaces(4)
        trimTrailingWhitespace()
        removeUnusedImports()
    }
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

apply from: 'publishing.gradle'
apply from: 'sonar.gradle'
